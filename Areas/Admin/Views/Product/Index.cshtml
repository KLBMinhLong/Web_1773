@model IEnumerable<Web_1773.Models.Product>

@{
    ViewData["Title"] = "Quản lý sản phẩm";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}
<div class="container py-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="mb-0">Quản lý sản phẩm</h2>
        <a class="btn btn-primary" asp-action="Add">
            <i class="fas fa-plus me-1"></i> Thêm sản phẩm mới
        </a>
    </div>

    <div class="row g-4">
        @foreach (var product in Model)
        {
            <div class="col-xl-3 col-lg-4 col-md-6">
                <div class="card product-card h-100">
                    <div class="product-image-wrapper">
                        @if (!string.IsNullOrEmpty(product.ImageUrl))
                        {
                            <img src="@product.ImageUrl" class="card-img-top product-image" 
                                 alt="@product.Name" 
                                 onerror="this.src='/images/product-placeholder.jpg'">
                        }
                        else
                        {
                            <img src="/images/product-placeholder.jpg" class="card-img-top product-image" alt="Product image placeholder">
                        }
                    </div>
                    <div class="card-body d-flex flex-column">
                        <div class="d-flex justify-content-between align-items-start mb-2">
                            <h5 class="card-title product-title mb-0">@product.Name</h5>
                            <span class="badge bg-info rounded-pill">ID: @product.Id</span>
                        </div>
                        
                        <p class="card-text small text-muted mb-2">
                            <i class="fas fa-tag me-1"></i> @(product.Category != null ? product.Category.Name : "No Category")
                        </p>
                        
                        <p class="card-text small mb-2">
                            <span class="fw-bold">Giá:</span> @(String.Format("{0:N0} ₫", product.Price))
                        </p>
                        
                        <p class="card-text flex-grow-1 product-description">
                            @(product.Description?.Length > 60 
                                ? product.Description.Substring(0, 60) + "..." 
                                : product.Description)
                        </p>
                        
                        <div class="mt-auto d-flex justify-content-between">
                            <div class="btn-group w-100">
                                <a class="btn btn-sm btn-outline-info" asp-action="Display" asp-route-id="@product.Id">
                                    <i class="fas fa-eye"></i>
                                </a>
                                <a class="btn btn-sm btn-outline-warning" asp-action="Update" asp-route-id="@product.Id">
                                    <i class="fas fa-edit"></i>
                                </a>
                                <a class="btn btn-sm btn-outline-danger" asp-action="Delete" asp-route-id="@product.Id">
                                    <i class="fas fa-trash"></i>
                                </a>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<style>
.product-card {
    border: 1px solid rgba(0,0,0,.125);
    border-radius: 0.75rem;
    overflow: hidden;
    transition: transform 0.3s ease, box-shadow 0.3s ease;
    box-shadow: 0 3px 10px rgba(0,0,0,0.05);
}

.product-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 10px 20px rgba(0,0,0,0.1);
}

.product-image-wrapper {
    position: relative;
    height: 180px;
    overflow: hidden;
    background-color: #f8f9fa;
}

.product-image {
    width: 100%;
    height: 100%;
    object-fit: contain;
    object-position: center;
    padding: 0.5rem;
    transition: transform 0.5s ease;
}

.product-card:hover .product-image {
    transform: scale(1.05);
}

.product-title {
    font-weight: 600;
    font-size: 1rem;
    line-height: 1.4;
    max-height: 2.8rem;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
}

.product-description {
    font-size: 0.85rem;
    color: #6c757d;
    max-height: 3.8rem;
    overflow: hidden;
    display: -webkit-box;
    -webkit-line-clamp: 3;
    -webkit-box-orient: vertical;
    margin-bottom: 1rem;
}

.btn-group {
    display: flex;
}

.btn-group .btn {
    flex: 1;
    border-radius: 0;
}

.btn-group .btn:first-child {
    border-top-left-radius: 0.25rem;
    border-bottom-left-radius: 0.25rem;
}

.btn-group .btn:last-child {
    border-top-right-radius: 0.25rem;
    border-bottom-right-radius: 0.25rem;
}

.badge {
    font-size: 0.7rem;
    padding: 0.35em 0.65em;
}

@@media (max-width: 767px) {
    .product-image-wrapper {
        height: 160px;
    }
}
</style>
