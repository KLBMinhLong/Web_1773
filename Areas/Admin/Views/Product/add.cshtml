@model Web_1773.Models.Product
@using Microsoft.AspNetCore.Mvc.Rendering

@{
    ViewData["Title"] = "Thêm sản phẩm mới";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid py-4">
    <!-- Header -->
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <div>
            <nav aria-label="breadcrumb">
                <ol class="breadcrumb">
                    <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Admin" asp-action="Index" class="text-decoration-none">Dashboard</a></li>
                    <li class="breadcrumb-item"><a asp-area="Admin" asp-controller="Product" asp-action="Index" class="text-decoration-none">Sản phẩm</a></li>
                    <li class="breadcrumb-item active" aria-current="page">Thêm sản phẩm</li>
                </ol>
            </nav>
            <h1 class="h3 mb-0 text-gradient fw-bold">Thêm sản phẩm mới</h1>
        </div>
    </div>

    <div class="row">
        <div class="col-lg-12">
            <div class="card border-0 shadow-sm rounded-3 mb-4">
                <div class="card-header bg-white py-3">
                    <h5 class="mb-0 text-primary fw-bold">
                        <i class="fas fa-plus-circle me-2"></i>Thông tin sản phẩm
                    </h5>
                </div>
                <div class="card-body">
                    <form id="addProductForm" enctype="multipart/form-data">
                        <div class="row">
                            <div class="col-md-6">
                                <!-- Thông tin cơ bản -->
                                <div class="mb-4">
                                    <label for="Name" class="form-label fw-medium">Tên sản phẩm</label>
                                    <input id="Name" name="Name" class="form-control form-control-lg rounded-3" placeholder="Nhập tên sản phẩm" required />
                                    <span class="text-danger" id="NameError"></span>
                                </div>

                                <div class="mb-4">
                                    <label for="Price" class="form-label fw-medium">Giá sản phẩm</label>
                                    <div class="input-group">
                                        <input id="Price" name="Price" type="number" step="0.01" class="form-control form-control-lg rounded-start" placeholder="0" required />
                                        <span class="input-group-text rounded-end">VNĐ</span>
                                    </div>
                                    <span class="text-danger" id="PriceError"></span>
                                </div>

                                <div class="mb-4">
                                    <label for="CategoryId" class="form-label fw-medium">Danh mục</label>
                                    <select id="CategoryId" name="CategoryId" class="form-select form-select-lg" required></select>
                                    <span class="text-danger" id="CategoryIdError"></span>
                                </div>
                            </div>

                            <div class="col-md-6">
                                <!-- Hình ảnh -->
                                <div class="mb-4">
                                    <label class="form-label fw-medium">Ảnh đại diện</label>
                                    <div class="input-group mb-2">
                                        <span class="input-group-text"><i class="fas fa-image"></i></span>
                                        <input type="file" id="mainImage" name="mainImage" class="form-control form-control-lg" accept="image/*" />
                                    </div>
                                    <small class="text-muted">Chọn một ảnh đại diện cho sản phẩm</small>
                                    <span class="text-danger" id="mainImageError"></span>
                                </div>

                                <div class="mb-4">
                                    <label class="form-label fw-medium">Ảnh bổ sung</label>
                                    <div class="input-group mb-2">
                                        <span class="input-group-text"><i class="fas fa-images"></i></span>
                                        <input type="file" id="additionalImages" name="additionalImages" multiple class="form-control form-control-lg" accept="image/*" />
                                    </div>
                                    <small class="text-muted">Có thể chọn nhiều ảnh (nhấn giữ CTRL để chọn)</small>
                                </div>
                            </div>

                            <div class="col-12 mb-4">
                                <label for="Description" class="form-label fw-medium">Mô tả sản phẩm</label>
                                <textarea id="Description" name="Description" class="form-control" rows="5" placeholder="Nhập mô tả chi tiết về sản phẩm..."></textarea>
                                <span class="text-danger" id="DescriptionError"></span>
                            </div>
                        </div>

                        <div class="d-flex justify-content-between border-top pt-4 mt-2">
                            <a asp-action="Index" class="btn btn-secondary px-4 py-2">
                                <i class="fas fa-arrow-left me-2"></i>Hủy và quay lại
                            </a>
                            <button type="submit" class="btn btn-primary px-4 py-2">
                                <i class="fas fa-save me-2"></i>Lưu sản phẩm
                            </button>
                        </div>
                    </form>
                    <div id="addProductSuccess" class="alert alert-success mt-3 d-none">Thêm sản phẩm thành công!</div>
                    <div id="addProductError" class="alert alert-danger mt-3 d-none"></div>
                </div>
            </div>
        </div>
    </div>
</div>

<style>
    /* Gradient heading */
    .text-gradient {
        background: linear-gradient(45deg, #667eea, #764ba2);
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        background-clip: text;
    }

    /* Form controls styling */
    .form-control, .form-select, .input-group-text {
        border: 1px solid #e2e8f0;
        padding: 0.75rem 1rem;
    }

    .form-control:focus, .form-select:focus {
        border-color: #667eea;
        box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.15);
    }

    /* Button styling */
    .btn-primary {
        background: linear-gradient(45deg, #667eea, #764ba2);
        border: none;
    }

    .btn-primary:hover {
        background: linear-gradient(45deg, #5a6ecd, #6a4291);
        border: none;
    }

    .text-primary {
        color: #667eea !important;
    }

    /* Card styling */
    .card {
        position: relative;
        border: none;
    }

    .card::after {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 4px;
        height: 100%;
        background: linear-gradient(180deg, #667eea, #764ba2);
        border-radius: 4px 0 0 4px;
    }

    .card-header {
        border-bottom: 1px solid rgba(102, 126, 234, 0.1);
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            // Load categories for select
            fetch('/api/categories')
                .then(res => res.json())
                .then(categories => {
                    const select = document.getElementById('CategoryId');
                    select.innerHTML = '<option value="">-- Chọn danh mục --</option>';
                    categories.forEach(cat => {
                        select.innerHTML += `<option value="${cat.id}">${cat.name}</option>`;
                    });
                });

            // Handle form submit
            document.getElementById('addProductForm').addEventListener('submit', function (e) {
                e.preventDefault();
                const form = e.target;
                const formData = new FormData(form);
                // Xóa thông báo lỗi cũ
                document.getElementById('addProductSuccess').classList.add('d-none');
                document.getElementById('addProductError').classList.add('d-none');
                ['Name','Price','CategoryId','Description','mainImage'].forEach(f => {
                    document.getElementById(f+'Error').innerText = '';
                });
                // Trước khi gửi formData:
                formData.set('CategoryId', parseInt(formData.get('CategoryId') || 0));
                formData.set('Price', parseFloat(formData.get('Price') || 0));
                fetch('/api/products', {
                    method: 'POST',
                    body: formData
                })
                .then(async res => {
                    if (res.ok) {
                        document.getElementById('addProductSuccess').classList.remove('d-none');
                        form.reset();
                    } else if (res.status === 400) {
                        const data = await res.json();
                        if (data.errors) {
                            Object.keys(data.errors).forEach(key => {
                                const errSpan = document.getElementById(key+'Error');
                                if (errSpan) errSpan.innerText = data.errors[key].join(', ');
                            });
                        } else {
                            document.getElementById('addProductError').innerText = 'Lỗi dữ liệu!';
                            document.getElementById('addProductError').classList.remove('d-none');
                        }
                    } else {
                        document.getElementById('addProductError').innerText = 'Có lỗi xảy ra!';
                        document.getElementById('addProductError').classList.remove('d-none');
                    }
                })
                .catch(() => {
                    document.getElementById('addProductError').innerText = 'Không thể kết nối API!';
                    document.getElementById('addProductError').classList.remove('d-none');
                });
            });
        });
    </script>
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
